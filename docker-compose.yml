version: '3.8'

services:
  # PostgreSQL Database Service
  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432" # Map container port 5432 to host port 5432
    volumes:
      - db_data:/var/lib/postgresql/data # Persist database data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s       # Check every 5 seconds
      timeout: 3s        # Give pg_isready 3 seconds to respond
      retries: 20        # Increased retries to 20 (from 10)
      start_period: 45s  # Increased start_period to 45 seconds (from 20s)
    restart: unless-stopped

  # Python Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: telegram_pipeline_app
    environment:
      TELEGRAM_API_ID: ${TELEGRAM_API_ID}
      TELEGRAM_API_HASH: ${TELEGRAM_API_HASH}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT}
    volumes:
      - .:/app
    ports:
      - "8000:8000"
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    entrypoint: /bin/bash -c "source .env && bash"
    stdin_open: true
    tty: true

volumes:
  db_data:
