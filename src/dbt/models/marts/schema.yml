version: 2

models:
  - name: dim_channels
    description: "Dimension table for Telegram channels."
    columns:
      - name: channel_id
        description: "Unique identifier for the Telegram channel."
        tests:
          - unique
          - not_null
      - name: channel_name
        description: "Name of the Telegram channel."
        tests:
          - not_null

  - name: dim_dates
    description: "Dimension table for dates, used for time-based analysis."
    columns:
      - name: date_key
        description: "Unique date key (YYYY-MM-DD)."
        tests:
          - unique
          - not_null
          # The custom test is now in src/dbt/tests/assert_valid_date_key.sql
          # So, no generic test is needed here unless you want another one.

  - name: fct_messages
    description: "Fact table containing one row per Telegram message."
    columns:
      - name: message_id
        description: "Unique identifier for the message."
        tests:
          - unique
          - not_null
      - name: channel_id
        description: "Foreign key to dim_channels."
        tests:
          - not_null
          - relationships:
              to: ref('dim_channels')
              field: channel_id
      - name: date_key
        description: "Foreign key to dim_dates."
        tests:
          - not_null
          - relationships:
              to: ref('dim_dates')
              field: date_key
      - name: message_text
        description: "Content of the Telegram message."
        tests:
          - not_null
      - name: has_media
        description: "Boolean indicating if the message contains media."
        tests: [] # <-- THIS IS THE CRUCIAL FIX: Changed from 'None' to '[]'
          # The custom test is now in src/dbt/tests/assert_media_type_exists_if_has_media.sql
